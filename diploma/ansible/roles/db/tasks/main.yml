- hosts: mysql_master
  become: yes
  become_user: root
  remote_user: ubuntu
  environment:
    LANGUAGE: en_US
    LC_ALL: en_US.UTF-8

  tasks:
    - name: Update apt packages
      apt:
        upgrade: no
        update_cache: yes

    - name: Install MySQL packages
      ansible.builtin.apt:
        name:
          - mysql-server
          - mysql-client
        state: present
        update_cache: true

    - name: Update MySQL configuration with bind address
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: bind-address = 0.0.0.0

    - name: Update MySQL configuration with server id
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^#server-id'
        line: server-id	= 1

    - name: Update MySQL configuration with log parameters
      ansible.builtin.blockinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        block: |
          log_bin = /var/log/mysql/mysql-bin.log
          log_bin_index = /var/log/mysql/mysql-bin.log.index
          relay_log = /var/log/mysql/mysql-relay-bin
          relay_log_index = /var/log/mysql/mysql-relay-bin.index

    - name: Restart MySQL daemon
      systemd:
        name: mysql
        state: restarted
        enabled: yes

    - name: Create replicator user SQL query
      command: sudo mysql -u root -e "CREATE USER IF NOT EXISTS 'replicator'@'mysql-slave.%' IDENTIFIED BY 'maSTeTpaSSw0rd';"
      ignore_errors: yes

    - name: Provide user with grant replication slave query
      command: sudo mysql -u root -e "GRANT REPLICATION SLAVE ON *.* TO 'replicator'@'mysql-slave.%';"
      ignore_errors: yes

    - name: Get and write Master status Position to `mysql_master_position` variable
      shell:
        cmd: sudo mysql -u root -e "SHOW MASTER STATUS\G" | grep "Position" | cut -d ":" -f2 | xargs
      register: mysql_master_position

    - name: Get and write Master status master log file to `mysql_master_file` variable
      shell:
        cmd: sudo mysql -u root -e "SHOW MASTER STATUS\G" | grep "File" | cut -d ":" -f2 | xargs
      register: mysql_master_file

    - set_fact: master_file="{{ mysql_master_file.stdout }}"

- hosts: mysql_slave
  become: yes
  become_user: root
  remote_user: ubuntu
  vars:
    mysql_master_position: "{{ hostvars['db01.jjvod-voevodin.ru']['mysql_master_position'] }}"
    mysql_master_file: "{{ hostvars['db01.jjvod-voevodin.ru']['master_file'] }}"

  tasks:
    - name: Update apt packages
      apt:
        upgrade: no
        update_cache: yes

    - name: Install MySQL packages
      ansible.builtin.apt:
        name:
          - mysql-server
          - mysql-client
        state: present
        update_cache: true

    - name: Update MySQL configuration with bind address
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: bind-address = 0.0.0.0

    - name: Update MySQL configuration with server id
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^#server-id'
        line: server-id	= 2

    - name: Update MySQL configuration with log parameters
      ansible.builtin.blockinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        block: |
          log_bin = /var/log/mysql/mysql-bin.log
          log_bin_index = /var/log/mysql/mysql-bin.log.index
          relay_log = /var/log/mysql/mysql-relay-bin
          relay_log_index = /var/log/mysql/mysql-relay-bin.index

    - name: Restart MySQL daemon
      systemd:
        name: mysql
        state: restarted
        enabled: yes

    - name: Stop Slave SQL query
      command: sudo mysql -u root -e "STOP SLAVE;"

    - name: Change Master settings SQL query
      command: sudo mysql -u root -e "CHANGE MASTER TO MASTER_HOST ='mysql-master', MASTER_USER ='replicator', MASTER_PASSWORD ='maSTeTpaSSw0rd', MASTER_LOG_FILE = '{{ mysql_master_file }}', MASTER_LOG_POS = {{ mysql_master_position.stdout }};"

    - name: Start Slave SQL query
      command: sudo mysql -u root -e "START SLAVE;"

# WordPress items
- hosts: mysql_master
  become: yes
  become_user: root
  remote_user: ubuntu

  tasks:
    - name: Create wordpress user SQL query
      command: sudo mysql -u root -e "CREATE USER IF NOT EXISTS 'wordpress'@'wordpress.%' IDENTIFIED BY 'wordpress';"

    - name: Create wordpress database SQL query
      command: sudo mysql -u root -e "CREATE DATABASE IF NOT EXISTS wordpress;"

    - name: Provide wordpress user with all privileges SQL query
      command: sudo mysql -u root -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'wordpress.%'"

- hosts: mysql_master, mysql_slave
  become: yes
  become_user: root
  remote_user: ubuntu

  tasks:
    - name: Include Docker task from `common` role
      include_role:
        name: common
        tasks_from: docker

    - name: Include Node exporter task from `common` role
      include_role:
        name: common
        tasks_from: node-exporter